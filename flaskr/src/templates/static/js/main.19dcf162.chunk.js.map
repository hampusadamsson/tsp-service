{"version":3,"sources":["logo.svg","Highscore.js","Submit.js","Table.js","Problem.js","Navigator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Highscore","props","state","result","getHighscore","axios","get","then","res","setState","data","className","id","this","map","row","i","key","parseInt","Component","Submit","name","distance","imgSource","onChangeHandler","bind","event","console","log","target","files","FormData","append","solutionName","prompt","post","alert","type","onChange","defaultDrageState","column","startPoint","direction","dropIndex","heads","rows","onDragEnd","useState","dragState","setDragState","headsEl","useRef","rowsEl","preview","offsetIndex","x","ref","y","j","draggable","onDragStart","e","dataTransfer","setDragImage","current","pageX","pageY","onDragEnter","style","position","width","height","overflow","from","to","arr","start","slice","between","end","Problem","solution","problemfile","downloadTxtFile","SubmitSolution","getProblem","split","v","fileName","file","element","document","createElement","Blob","String","join","href","URL","createObjectURL","download","body","appendChild","click","bodyFormData","set","newData","onClick","src","alt","Navigator","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19dcf162.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Highscore.css';\n\nclass Highscore extends Component {\n  constructor(props){\n  super(props);\n  this.state = {\n    result: [],\n  };\n  this.getHighscore();\n}\n\ngetHighscore(){\n  axios.get(\"/getHighscore\")\n  .then(res => {\n    this.setState({\n      result: res.data,\n    });\n  });\n}\n\nrender() {\n  return (\n    <div>\n      <div className=\"Container\">\n        <table id=\"customers\">\n        <tbody>\n          <tr>\n            <th>Rank</th>\n            <th>Name</th>\n            <th>Score</th>\n            <th>Date</th>\n          </tr>\n          {this.state.result.map((row, i) =>\n            <tr key={i}>\n              <td>{i+1}</td>\n              <td>{row[0]}</td>\n              <td>{parseInt(row[1])}</td>\n              <td>{row[2]}</td>\n            </tr>\n          )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default Highscore;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass Submit extends Component {\n  constructor(props){\n  super(props);\n  this.state = {\n    name: \"\",\n    distance: \"\",\n    imgSource: \"/img\",\n  };\n  this.onChangeHandler = this.onChangeHandler.bind(this);\n}\n\nonChangeHandler(event){\n  console.log(\"INC\", event.target.files[0])\n  const data = new FormData()\n  data.append('file', event.target.files[0])\n  var solutionName = prompt(\"Please enter your name\", \"\");\n  if (solutionName === \"\" || !solutionName ) {\n    alert(\"You need to add a name\")\n    return;\n  }\n  data.append('user', solutionName);\n  axios.post(\"/uploadSolution\", data, {\n   })\n   .then(res => {\n     console.log(res.data);\n     this.setState({\n       distance: res.data.distance,\n     });\n   })\n}\n\nrender() {\n  return (\n    <div>\n      <input className=\"inputfile\" type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\n      <div className=\"Container\">\n        <b>{this.state.distance}</b>\n      </div>\n      <div>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default Submit;\n","import { useState, useRef } from \"react\";\nimport React from \"react\";\n\n// tell direction after drag start, the first dirction that reach 5px offset\nconst DRAG_DIRECTION_NONE = \"\";\nconst DRAG_DIRECTION_ROW = \"row\";\nconst DRAG_DIRECTION_COLUMN = \"column\";\n\nconst defaultDrageState = {\n  column: -1,\n  row: -1,\n  startPoint: null,\n  direction: DRAG_DIRECTION_NONE, // row=move up down/column=move left right,\n  dropIndex: -1 // drag target\n};\n\nexport default props => {\n  let { heads = [], rows = [], onDragEnd } = props;\n  let [dragState, setDragState] = useState({ ...defaultDrageState });\n  const headsEl = useRef(null),\n    rowsEl = useRef(null),\n    preview = useRef(null);\n\n  if (dragState.direction === DRAG_DIRECTION_COLUMN) {\n    heads = offsetIndex(dragState.column, dragState.dropIndex, heads);\n    rows = rows.map(x => offsetIndex(dragState.column, dragState.dropIndex, x));\n  }\n\n  if (dragState.direction === DRAG_DIRECTION_ROW) {\n    rows = offsetIndex(dragState.row, dragState.dropIndex, rows);\n  }\n\n  // console.log(JSON.stringify(dragState))\n  return (\n    <div>\n      <table id = \"customers\">\n        <thead>\n          <tr ref={headsEl}>\n            {heads.map((x, i) => (\n              <th key={i}>{x}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody ref={rowsEl}>\n          {rows.map((x = [], i) => (\n            <tr key={i}>\n              {x.map((y, j) => (\n                <td\n                  key={j}\n                  draggable=\"true\"\n                  onDragStart={e => {\n                    console.log(`onDragStart`);\n                    e.dataTransfer.setDragImage(preview.current, 0, 0);\n                    setDragState({\n                      ...dragState,\n                      row: i,\n                      column: j,\n                      startPoint: {\n                        x: e.pageX,\n                        y: e.pageY\n                      }\n                    });\n                  }}\n                  onDragEnter={e => {\n                    console.log(`onDragEnter`);\n                    if (!dragState.direction) {\n                      if (dragState.column !== j) {\n                        setDragState({\n                          ...dragState,\n                          direction: DRAG_DIRECTION_COLUMN,\n                          dropIndex: j\n                        });\n                        return;\n                      }\n                      if (dragState.row !== i) {\n                        setDragState({\n                          ...dragState,\n                          direction: DRAG_DIRECTION_ROW,\n                          dropIndex: i\n                        });\n                        return;\n                      }\n                      return;\n                    }\n\n                    if (dragState.direction === DRAG_DIRECTION_COLUMN) {\n                      if (j !== dragState.dropIndex) {\n                        setDragState({\n                          ...dragState,\n                          dropIndex: j\n                        });\n                      }\n                      return;\n                    }\n                    if (dragState.direction === DRAG_DIRECTION_ROW) {\n                      if (i !== dragState.dropIndex) {\n                        setDragState({\n                          ...dragState,\n                          dropIndex: i\n                        });\n                      }\n                      return;\n                    }\n                  }}\n                  onDragEnd={() => {\n                    console.log(`onDragEnd`);\n                    onDragEnd(\n                      dragState.direction,\n                      dragState.direction === DRAG_DIRECTION_COLUMN\n                        ? dragState.column\n                        : dragState.row,\n                      dragState.dropIndex,\n                      { heads, rows }\n                    );\n                    setDragState({ ...defaultDrageState });\n                  }}\n                >\n                  {y}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div\n        ref={preview}\n        style={{\n          position: \"absolute\",\n          width: 0,\n          height: 0,\n          overflow: \"hidden\"\n        }}\n      />\n    </div>\n  );\n};\n\nfunction offsetIndex(from, to, arr = []) {\n  if (from < to) {\n    let start = arr.slice(0, from),\n      between = arr.slice(from + 1, to + 1),\n      end = arr.slice(to + 1);\n    return [...start, ...between, arr[from], ...end];\n  }\n  if (from > to) {\n    let start = arr.slice(0, to),\n      between = arr.slice(to, from),\n      end = arr.slice(from + 1);\n    return [...start, arr[from], ...between, ...end];\n  }\n  return arr;\n}\n","import React, { Component } from 'react';\nimport Submit from './Submit.js';\nimport axios from 'axios';\nimport ReactTableDragColumnRow from \"./Table\";\n\nclass Problem extends Component {\n  constructor(props){\n  super(props);\n  this.state = {\n    result: [],\n    solution: [],\n    problemfile: \"\",\n    data: {\n      heads: [\"Id\", \"Kontor\", \"Long\", \"Lat\"],\n      rows: []\n    },\n    imgSource: \"/img\",\n  };\n  this.downloadTxtFile = this.downloadTxtFile.bind(this);\n  this.SubmitSolution = this.SubmitSolution.bind(this);\n  this.getProblem();\n}\n\ngetProblem() {\n  axios.get(\"/tsp\") //http://localhost:5000\n  .then(res => {\n    console.log(res.data);\n    const rows = res.data.slice(0, -2).split(\"\\n\")\n    this.setState({\n      result: rows,\n      problemfile: res.data,\n      data: {\n        heads: this.state.data.heads,\n        rows: rows.map(v => v.split(\"\\t\")),\n      },\n    });\n  });\n}\n\ndownloadTxtFile(fileName) {\n  console.log(file);\n  const element = document.createElement(\"a\");\n  var file;\n  if(fileName === \"problem\") {\n    file = new Blob([this.state.problemfile], {type: 'text/plain'});\n  }else {\n    file = new Blob([String(this.state.data.rows.map(v => v[0])).split(\",\").join(\"\\n\")], {type: 'text/plain'});\n  }\n  element.href = URL.createObjectURL(file);\n  element.download = fileName + \".txt\";\n  document.body.appendChild(element);\n  element.click();\n}\n\nSubmitSolution(){\n  const solution = this.state.data.rows.map(v => v[0]);\n  console.log(solution);\n  var solutionName = prompt(\"Please enter your name\", \"\");\n  if (solutionName === \"\" || !solutionName ) {\n    alert(\"You need to add a name\")\n    return;\n  }\n  var bodyFormData = new FormData();\n  bodyFormData.set('user', solutionName);\n  bodyFormData.append('solution', \"[\" + solution + \"]\");\n  axios.post(\"/submitSolution\", bodyFormData)\n  .then(res => {\n    console.log(res.data);\n    this.setState({\n      distance: res.data.distance,\n      imgSource: \"/img/\"+String(solution).split(\",\").join(\"-\"),\n    });\n  });\n}\n\nrender() {\n  return (\n    <div>\n    {this.state.distance}\n      <ReactTableDragColumnRow\n          heads={this.state.data.heads}\n          rows={this.state.data.rows}\n          onDragEnd={(type, from, to, newData) => {\n            console.log({\n              type,\n              from,\n              to,\n              newData\n            });\n            this.setState({\n              data: newData\n            });\n          }}\n        />\n        <div>\n          <button className=\"button\" onClick={(e) => this.downloadTxtFile(\"problem\")}>Assignment</button>\n          <button className=\"button\" onClick={(e) => this.downloadTxtFile(\"solution\")}>Solution example</button>\n          <button className=\"button\" onClick={(e) => this.SubmitSolution(e)}>Submit</button>\n        </div>\n        <b>Solution</b>\n        <br/>\n        {this.state.distance}\n        <div>\n          <img src={this.state.imgSource} alt=\"my plot\" />\n        </div>\n    </div>\n  );\n  }\n}\n //        <Submit solution={this.state.data.rows.map(row => row[0])}/>\n\nexport default Problem;\n","import React from 'react'\nimport './Navigator.css'\n\nexport const Navigator = () => (\n  <div className=\"Nav\">\n    <a href=\"/highscore\" className=\"button\">Highscore</a>\n    <a href=\"/problem\" className=\"button\">Problem</a>\n    <a href=\"/submit\" className=\"button\">Submit</a>\n  </div>\n)\n\nexport default Navigator\n","import React from 'react';\nimport logo from './logo.svg';\nimport Highscore from './Highscore.js';\nimport Submit from './Submit.js';\nimport Problem from './Problem.js';\nimport Navigator from './Navigator.js';\nimport './App.css';\n\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div>\n      <Navigator />\n      <BrowserRouter>\n       <div className=\"App\">\n          <Switch>\n            <Route exact path='/' component={Highscore} />\n            <Route exact path='/problem' component={Problem} />\n            <Route exact path='/highscore' component={Highscore} />\n            <Route exact path='/submit' component={Submit} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}